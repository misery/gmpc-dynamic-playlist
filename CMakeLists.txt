CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2)

PROJECT(gmpc-dynamic-playlist C)

FIND_PACKAGE(PkgConfig REQUIRED)
IF(NOT PKG_CONFIG_FOUND)
	MESSAGE(FATAL_ERROR "You need 'pkg-config' to build this plugin!")
ENDIF()

FILE(GLOB C_FILES RELATIVE ${PROJECT_SOURCE_DIR} "*.c")
FILE(GLOB PO_FILES RELATIVE ${PROJECT_SOURCE_DIR} "po/*.po")

ADD_LIBRARY(dynlist SHARED ${C_FILES})

FIND_PACKAGE(Gettext QUIET)
FIND_PROGRAM(GETTEXT_XGETTEXT_EXE xgettext)
IF(NOT GETTEXT_FOUND AND NOT GETTEXT_XGETTEXT_EXE)
	MESSAGE(STATUS "Translations won't be build... gettext isn't available!")
ELSE()
	ADD_CUSTOM_COMMAND(
		OUTPUT ${PROJECT_NAME}.pot
		COMMAND ${GETTEXT_XGETTEXT_EXE} --omit-header --keyword=_ --keyword=N_ ${C_FILES} -o ${PROJECT_NAME}.pot
		)

	IF(PO_FILES)
		MESSAGE(STATUS "Translations will be build!")
		#GETTEXT_CREATE_TRANSLATIONS(${PROJECT_NAME}.pot ALL ${PO_FILES})
		GETTEXT_CREATE_TRANSLATIONS(${PROJECT_NAME}.pot ${PO_FILES})
		ADD_DEPENDENCIES(dynlist translations)
	ELSE()
		MESSAGE(STATUS "Translations not found!")
	ENDIF()
ENDIF()

pkg_check_modules(GMPC REQUIRED gmpc>=0.18.1)
pkg_check_modules(DEPS REQUIRED
	libmpd>=0.18
	glib-2.0>=2.16
	gtk+-2.0>=2.8
	gobject-2.0>=2.4
	gmodule-2.0
	gthread-2.0
	)

INCLUDE_DIRECTORIES(${DEPS_INCLUDE_DIRS} ${GMPC_INCLUDE_DIRS})
LINK_DIRECTORIES(${DEPS_LIBRARY_DIRS} ${GMPC_LIBRARY_DIRS})

SET_TARGET_PROPERTIES(dynlist PROPERTIES OUTPUT_NAME "dynlistplugin")
SET_TARGET_PROPERTIES(dynlist PROPERTIES PREFIX "")
TARGET_LINK_LIBRARIES(dynlist ${DEPS_LIBRARIES} ${GMPC_LIBRARIES})

IF(NOT DEFINED plugindir)
	SET(plugindir "${GMPC_LIBDIR}/gmpc/plugins")
ENDIF()
INSTALL(TARGETS dynlist DESTINATION ${plugindir})
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
ADD_DEFINITIONS(-D GETTEXT_PACKAGE="\\"${PROJECT_NAME}\\"")
ADD_DEFINITIONS(-D PACKAGE_LOCALE_DIR="\\"${CMAKE_INSTALL_PREFIX}/share/locale\\"")

IF(NOT DEFINED debug OR NOT debug)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D G_DISABLE_ASSERT")
	MESSAGE(STATUS "G_ASSERTs are disabled!")
ELSE()
	MESSAGE(STATUS "G_ASSERTs are enabled!")
	SET(CMAKE_VERBOSE_MAKEFILE on)
ENDIF()

MESSAGE(STATUS "Using CMAKE_INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")
MESSAGE(STATUS "Using plugindir: ${plugindir}")

